/*-------------------------------------------------------------------------------------------------------------------
File:       mdu_premise_extract.sql

Date:

Purpose:    This sql script generates the MDU premise extract.

 AUDIT TRAIL
 Modified By
 =======================
Date       Person              Version    Description
--------   ------------        --------  -------------------------------
10/10/13   Pavithra            1.5       QC:16475 - DSR extract enhancement to association code
02-JAN-14  Manoj S             1.6       QC:16862 - Disconnect information missing from the MDU extract
15/01/14   Ram Prasad          1.7       QC:16916 - MDU extract missing the billing system house key
31/01/14   Manoj          	   SVN       QC:16862/16916 - MDU extract missing the billing system house key
30/06/16   Kavitha Mary        SVN       QC:22176 - Modified to include cstm_fld_1_txt
---------------------------------------------------------------------------------------------------------------------*/

SELECT NOW()||' Update EXTRACT_LOAD_CONTROL Table to set LD_PRCS_FLG, EDW_DATA_DT' AS LOG_DETAIL;

UPDATE ${NZ_DATABASE_EXRT}..EXTRACT_LOAD_CONTROL ELC
SET LD_PRCS_FLG =
        (CASE
                WHEN (ORG_PART_KEY = ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.ORG_PART_KEY
                        AND DATA_DT >= ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.DL_DATA_DT
                        AND LD_PRCS_FLG = 'Y')
                THEN 'N'
                WHEN (DATA_DT < ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.DL_DATA_DT
                        AND ORG_PART_KEY = ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.ORG_PART_KEY
                        AND LD_PRCS_FLG = 'N')
                THEN 'Y'
                ELSE LD_PRCS_FLG
        END),
EDW_DATA_DT =
        (CASE
                WHEN (ORG_PART_KEY = ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.ORG_PART_KEY
                        AND EDW_DATA_DT < ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.DL_DATA_DT
                        AND DIV_PRCS_FLG = 'Y')
                THEN ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.DL_DATA_DT
                ELSE EDW_DATA_DT
        END)
WHERE ORG_PART_KEY = ${NZ_DATABASE_DL_STG}..ETL_DL_DATA_DATE.ORG_PART_KEY
        AND PRJ_NM = 'MDU'
        AND TBL_NM = 'MDU_PREMISE_EXTRACT'
        AND DIV_PRCS_FLG = 'Y';

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_PRCS_DT' AS LOG_DETAIL;
SELECT NOW()||' Get date to start pull from' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_PRCS_DT AS
SELECT
        CASE
                WHEN INCRMNTL_FLG = 'N'
                        THEN ADD_MONTHS(CURRENT_DATE,- 36)
                WHEN INCRMNTL_FLG = 'Y'
                        THEN ADD_MONTHS(CURRENT_DATE,-1)
        END PRCS_DT
FROM ${NZ_DATABASE_EXRT}..EXTRACT_CONTROL EC
WHERE EC.PRJ_NM = 'MDU'
DISTRIBUTE ON RANDOM;

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_DATES' AS LOG_DETAIL;
SELECT NOW()||' Get dates for each month to pull' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_DATES AS
SELECT distinct s.FMTH_NM as MO_NM,s.FMTH_END_DT_KEY as END_DAY_KEY,
s.FMTH_BEGN_DT_KEY as BEGN_DAY_KEY
FROM ${NZ_DATABASE_EDS}..shrd_dim_period s
INNER JOIN TMP_PRCS_DT PT
        ON s.day_nm_dt  >= PT.PRCS_DT
        AND fmth_end_dt < CURRENT_DATE
DISTRIBUTE ON RANDOM;

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_SRC_DL_DVLPMNT' AS LOG_DETAIL;
SELECT NOW()||' Get subset of development data with property address' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_SRC_DL_DVLPMNT AS
SELECT DISTINCT d.dvlpmnt_key,
       d.dvlpmnt_nm,
       d.dvlpmnt_cd,
       d.org_part_key,
       addr.addr_line_1_txt as PROP_ADDR_LINE_1_TXT,
       addr.addr_line_2_txt as PROP_ADDR_LINE_2_TXT,
       addr.addr_line_3_txt as PROP_ADDR_LINE_3_TXT,
       addr.addr_line_4_txt as PROP_ADDR_LINE_4_TXT,
       addr.five_dgt_zip as PROP_FIVE_DGT_ZIP,
       addr.city_nm as PROP_CITY_NM,
       addr.st_cd as  PROP_ST_CD,
       da.end_day_key as mo_end
FROM ${NZ_DATABASE_DL_STG}..SRC_DL_DEVELOPMENT d
     INNER JOIN TMP_DATES da
       ON d.VER_START_DAY_KEY <= da.END_DAY_KEY
       AND d.VER_END_DAY_KEY > da.END_DAY_KEY
     LEFT JOIN ${NZ_DATABASE_DL}..DL_ADDRESS addr
       ON d.ADDR_KEY = addr.ADDR_KEY
DISTRIBUTE ON (dvlpmnt_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_DL_ORG' AS LOG_DETAIL;
SELECT NOW()||' Get subset of dl_org' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_DL_ORG AS
SELECT org_key,lvl_2_nm,lvl_3_nm,BILL_SYST_LVL_1_CD,BILL_SYST_LVL_2_CD,
       da.end_day_key as mo_end
FROM ${NZ_DATABASE_DL}..DL_ORGANIZATION org,
     TMP_DATES da
WHERE ORG.HIER_NM = 'All Regions'
AND ORG.LVL_2_NM LIKE '%Region'
AND ORG.EFF_START_DAY_KEY <= DA.END_DAY_KEY
AND ORG.EFF_END_DAY_KEY > DA.END_DAY_KEY
DISTRIBUTE ON RANDOM;

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_SRC_DL_PREM' AS LOG_DETAIL;
SELECT NOW()||' Get custom fields from src_dl_premise' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_SRC_DL_PREM AS
SELECT DISTINCT prms_key,cstm_fld_1_txt,cstm_fld_10_txt,
       da.end_day_key as mo_end
FROM ${NZ_DATABASE_DL_STG}..SRC_DL_PREMISE p,
     TMP_DATES da
WHERE p.VER_START_DAY_KEY <= DA.END_DAY_KEY
AND p.VER_END_DAY_KEY > DA.END_DAY_KEY
DISTRIBUTE ON (prms_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_PREMISE' AS LOG_DETAIL;
SELECT NOW()||' Get premise information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_PREMISE AS
SELECT DA.END_DAY_KEY as MO_END, DA.MO_NM,PRM.PRMS_KEY, ORG.LVL_2_NM, ORG.LVL_3_NM,
       DVLP.DVLPMNT_NM, DVLP.DVLPMNT_CD, DVLP.DVLPMNT_KEY,
       DVLP.PROP_ADDR_LINE_1_TXT,DVLP.PROP_ADDR_LINE_2_TXT,
       DVLP.PROP_ADDR_LINE_3_TXT,DVLP.PROP_ADDR_LINE_4_TXT,
       DVLP.PROP_FIVE_DGT_ZIP,DVLP.PROP_CITY_NM,DVLP.PROP_ST_CD,
       PRM.HS_ASSN_CD_KEY,
       CASE WHEN ORG.BILL_SYST_LVL_1_CD IN (8200, 700) AND ORG.BILL_SYST_LVL_2_CD IN (71, 72, 1300, 1400, 1600, 1700, 1800)
            THEN SPRM.CSTM_FLD_10_TXT
            WHEN ORG.BILL_SYST_LVL_1_CD IN (8448)
            THEN SPRM.CSTM_FLD_1_TXT
            ELSE NULL
       END HOUSE_CODE,
       PRM.ADDR_KEY,
       PRM.ORG_KEY,
	   PRM.HS_NBR
FROM ${NZ_DATABASE_DL}..DL_PREMISE PRM
        INNER JOIN TMP_DATES DA
                ON PRM.VER_START_DAY_KEY <= DA.END_DAY_KEY
                AND PRM.VER_END_DAY_KEY > DA.END_DAY_KEY
        INNER JOIN ${NZ_DATABASE_EXRT}..MDU_DWELLING_TYPE MDU
                ON MDU.CD_KEY = PRM.DWLNG_TYP_CD_KEY
        LEFT JOIN TMP_SRC_DL_DVLPMNT  DVLP
                ON DVLP.DVLPMNT_KEY = PRM.DVLPMNT_KEY
                AND DVLP.ORG_PART_KEY = PRM.ORG_PART_KEY
                AND DVLP.MO_END = DA.END_DAY_KEY
        INNER JOIN TMP_DL_ORG ORG
                ON ORG.ORG_KEY = PRM.ORG_KEY
                AND ORG.MO_END = DA.END_DAY_KEY
        LEFT JOIN TMP_SRC_DL_PREM SPRM
                ON SPRM.PRMS_KEY = PRM.PRMS_KEY
                AND SPRM.MO_END = DA.END_DAY_KEY
        INNER JOIN ${NZ_DATABASE_EXRT}..EXTRACT_LOAD_CONTROL ELC
                ON ELC.PRJ_NM = 'MDU'
                AND TBL_NM = 'MDU_PREMISE_EXTRACT'
                AND ELC.ORG_PART_KEY = PRM.ORG_PART_KEY
                AND DIV_PRCS_FLG = 'Y'
                AND LD_PRCS_FLG = 'Y'
DISTRIBUTE ON (PRMS_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_DL_CUST_ACCT' AS LOG_DETAIL;
SELECT NOW()||' Get distinct dl_cust_acct set' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_DL_CUST_ACCT AS
SELECT prms_key,cust_acct_key,cust_nm,acct_nbr,org_part_key,
       mo_end,cust_key
FROM(SELECT ca.prms_key,ca.cust_acct_key,ca.cust_nm,ca.acct_nbr,ca.org_part_key,
            ca.cust_key,da.end_day_key as mo_end,
            RANK () OVER (PARTITION BY cust_acct_key
                          ORDER BY eff_end_day_key desc,eff_start_day_key desc) AS cust_rnk
     FROM ${NZ_DATABASE_DL}..DL_CUSTOMER_ACCOUNT CA,
          TMP_DATES DA
     WHERE CA.EFF_START_DAY_KEY <= DA.END_DAY_KEY
     AND CA.EFF_END_DAY_KEY > DA.END_DAY_KEY
     ) r
WHERE cust_rnk = 1
DISTRIBUTE ON (cust_acct_key);


SELECT NOW()||' CREATE TEMPORARY TABLE TMP_DL_PROD_SERV' AS LOG_DETAIL;
SELECT NOW()||' get distinct subest of product_service_code' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_DL_PROD_SERV AS
SELECT DISTINCT prod_srvc_key,lob_nm,proration_rate,lvl_2_nm,da.end_day_key as mo_end
FROM TMP_DATES DA,
     ${NZ_DATABASE_DL}..DL_PRODUCT_SERVICE_CODE PSC
WHERE PSC.EFF_START_DAY_KEY <= DA.END_DAY_KEY
AND PSC.EFF_END_DAY_KEY > DA.END_DAY_KEY
AND psc.proration_rate > 0
AND LOB_NM != 'Other'
DISTRIBUTE ON (prod_srvc_key);


SELECT NOW()||' CREATE TEMPORARY TABLE TMP_RATE_SUM' AS LOG_DETAIL;
SELECT NOW()||' Get distinct rate_summary subset' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_RATE_SUM AS
SELECT cust_acct_key,prod_cls_mtrx_key,rgu.prod_srvc_key,da.end_day_key as mo_end,
       SUM(net_rvnu_amt) as net_rvnu_amt
FROM ${NZ_DATABASE_EDS}..SUB_RATE_SUMMARY_RGU rgu,
     TMP_DATES DA,
     (select distinct prod_srvc_key, mo_end from TMP_DL_PROD_SERV) psc
WHERE RGU.RATE_START_DAY_KEY <= DA.END_DAY_KEY
AND RGU.RATE_END_DAY_KEY > DA.END_DAY_KEY
AND RGU.RGU_FLG = 'Y'
AND RGU.prod_srvc_key = psc.prod_srvc_key
AND psc.mo_end = da.end_day_key
GROUP BY 1,2,3,4
DISTRIBUTE ON (cust_acct_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUST' AS LOG_DETAIL;
SELECT NOW()||' Get cust_acct_key with rev' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CUST AS
SELECT CA.PRMS_KEY, CA.CUST_ACCT_KEY, CA.CUST_NM,
       CA.ACCT_NBR, CA.CUST_KEY, CA.ORG_PART_KEY, ca.mo_end,
       RGU.NET_RVNU_AMT,
       RGU.PROD_CLS_MTRX_KEY,
       RGU.PROD_SRVC_KEY
FROM TMP_DL_CUST_ACCT CA
     LEFT JOIN  TMP_RATE_SUM RGU
       ON RGU.CUST_ACCT_KEY = CA.CUST_ACCT_KEY
       AND RGU.MO_END = CA.MO_END
DISTRIBUTE ON (PRMS_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUST_PREM' AS LOG_DETAIL;
SELECT NOW()||' combine premise with customer' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CUST_PREM AS
SELECT PRM.PRMS_KEY, PRM.MO_END, PRM.MO_NM,PRM.LVL_2_NM as REGION,
       PRM.LVL_3_NM,PRM.DVLPMNT_NM, PRM.DVLPMNT_CD, PRM.DVLPMNT_KEY,
       PRM.PROP_ADDR_LINE_1_TXT, PRM.PROP_ADDR_LINE_2_TXT,
       PRM.PROP_ADDR_LINE_3_TXT, PRM.PROP_ADDR_LINE_4_TXT,
       PRM.PROP_FIVE_DGT_ZIP, PRM.PROP_CITY_NM, PRM.PROP_ST_CD,
       PRM.HS_ASSN_CD_KEY, PRM.HOUSE_CODE, PRM.ADDR_KEY, CA.CUST_NM,
       CA.ACCT_NBR,
       CA.CUST_KEY, CA.ORG_PART_KEY,
       CA.NET_RVNU_AMT,
       PRM.ORG_KEY,
       CA.PROD_CLS_MTRX_KEY,  CA.CUST_ACCT_KEY,CA.PROD_SRVC_KEY,PRM.HS_NBR
FROM TMP_PREMISE PRM
     LEFT JOIN TMP_CUST CA
          ON CA.PRMS_KEY = PRM.PRMS_KEY
          AND CA.MO_END = PRM.MO_END
DISTRIBUTE ON (addr_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUST_PREM_ADDR' AS LOG_DETAIL;
SELECT NOW()||' combine premise with customer address' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CUST_PREM_ADDR AS
SELECT PRM.PRMS_KEY, PRM.MO_END, PRM.MO_NM,PRM.REGION,
       PRM.LVL_3_NM,PRM.DVLPMNT_NM, PRM.DVLPMNT_CD, PRM.DVLPMNT_KEY,
       PRM.PROP_ADDR_LINE_1_TXT, PRM.PROP_ADDR_LINE_2_TXT,
       PRM.PROP_ADDR_LINE_3_TXT, PRM.PROP_ADDR_LINE_4_TXT,
       PRM.PROP_FIVE_DGT_ZIP, PRM.PROP_CITY_NM, PRM.PROP_ST_CD,
       PRM.HS_ASSN_CD_KEY, PRM.HOUSE_CODE,
       PRM.ADDR_KEY,
       PRM.CUST_NM,PRM.ACCT_NBR,
       PRM.CUST_KEY, PRM.ORG_PART_KEY,
       PRM.NET_RVNU_AMT,
       PRM.ORG_KEY,
       PRM.PROD_CLS_MTRX_KEY,  PRM.CUST_ACCT_KEY,PRM.PROD_SRVC_KEY,
       CUST_ADDR.ADDR_LINE_1_TXT,CUST_ADDR.ADDR_LINE_2_TXT,
       CUST_ADDR.ADDR_LINE_3_TXT,CUST_ADDR.ADDR_LINE_4_TXT,
       CUST_ADDR.FIVE_DGT_ZIP,CUST_ADDR.CITY_NM,CUST_ADDR.ST_CD,PRM.HS_NBR
FROM TMP_CUST_PREM PRM
     LEFT JOIN ${NZ_DATABASE_DL}..DL_ADDRESS CUST_ADDR
          ON CUST_ADDR.ADDR_KEY = PRM.ADDR_KEY
DISTRIBUTE ON (addr_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_DL_CUST_CLS' AS LOG_DETAIL;
SELECT NOW()||' get subset dl_cust_class' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_DL_CUST_CLS AS
SELECT cust_key,org_part_key,cust_cls_txt,
       da.end_day_key as mo_end
FROM ${NZ_DATABASE_DL}..DL_CUST_CLASS CC,
     TMP_DATES DA
WHERE CC.VER_START_DAY_KEY <= DA.END_DAY_KEY
AND CC.VER_END_DAY_KEY > DA.END_DAY_KEY
DISTRIBUTE ON (cust_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUST_PREM_ADDR_CUST' AS LOG_DETAIL;
SELECT NOW()||' get cust_key info. filter down to only premise with customer.  Add premise only back later in script' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CUST_PREM_ADDR_CUST AS
SELECT PRM.PRMS_KEY, PRM.MO_END, PRM.MO_NM, PRM.REGION,
       PRM.LVL_3_NM,PRM.DVLPMNT_NM, PRM.DVLPMNT_CD, PRM.DVLPMNT_KEY,
       PRM.PROP_ADDR_LINE_1_TXT, PRM.PROP_ADDR_LINE_2_TXT,
       PRM.PROP_ADDR_LINE_3_TXT, PRM.PROP_ADDR_LINE_4_TXT,
       PRM.PROP_FIVE_DGT_ZIP, PRM.PROP_CITY_NM, PRM.PROP_ST_CD,
       PRM.HS_ASSN_CD_KEY, PRM.HOUSE_CODE, PRM.ADDR_KEY, PRM.CUST_NM,
       PRM.ACCT_NBR,PRM.CUST_KEY, PRM.ORG_PART_KEY, PRM.NET_RVNU_AMT,
       PRM.ORG_KEY, PRM.PROD_CLS_MTRX_KEY,  PRM.CUST_ACCT_KEY,PRM.PROD_SRVC_KEY,
       PRM.ADDR_LINE_1_TXT,PRM.ADDR_LINE_2_TXT,
       PRM.ADDR_LINE_3_TXT,PRM.ADDR_LINE_4_TXT,
       PRM.FIVE_DGT_ZIP,PRM.CITY_NM,PRM.ST_CD,
       CC.CUST_CLS_TXT,PRM.HS_NBR
FROM TMP_CUST_PREM_ADDR PRM
     LEFT OUTER JOIN TMP_DL_CUST_CLS CC
ON  CC.CUST_KEY = PRM.CUST_KEY
AND CC.ORG_PART_KEY = PRM.ORG_PART_KEY
AND CC.MO_END = PRM.MO_END
AND PRM.cust_key > 0
WHERE prm.cust_acct_key IS NOT NULL
DISTRIBUTE ON (cust_acct_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_PROD_CLASS' AS LOG_DETAIL;
SELECT NOW()||' get disintct subset of product class' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_PROD_CLASS AS
SELECT DISTINCT prod_srvc_key,prod_cls_mtrx_key,prod_cls_txt,mo_end
FROM (SELECT pc.prod_srvc_key,pc.prod_cls_mtrx_key,prod_cls_txt,da.end_day_key as mo_end,
             CASE WHEN prod_cls_txt = 'R'
                  THEN 1
                  WHEN prod_cls_txt =  'BMR'
                  THEN 2
                  WHEN prod_cls_txt =  'BSR'
                  THEN 3
                  WHEN prod_cls_txt = 'C'
                  THEN 4
                  WHEN prod_cls_txt =  'BMC'
                  THEN 5
                  WHEN prod_cls_txt =  'BSC'
                  THEN 6
                  WHEN prod_cls_txt = 'MIS'
                  THEN 7
                  WHEN prod_cls_txt = 'DEF'
                  THEN 8
                  ELSE 9
            END as cls,
            RANK () OVER (PARTITION BY pc.prod_srvc_key,pc.prod_cls_mtrx_key
                          ORDER BY eff_end_day_key desc,eff_start_day_key desc,cls) AS cls_rnk
        FROM TMP_DATES DA,
             ${NZ_DATABASE_DL}..DL_PROD_CLASS PC
        WHERE PC.EFF_END_DAY_KEY > DA.END_DAY_KEY
        AND PC.EFF_START_DAY_KEY <= DA.END_DAY_KEY
        )r
WHERE cls_rnk = 1
DISTRIBUTE ON (prod_srvc_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_PROD_SERV_CLAS' AS LOG_DETAIL;
SELECT NOW()||' get distinct dl_product_service_code with dl_prod_class subset' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_PROD_SERV_CLAS AS
SELECT psc.prod_srvc_key,
       pc.prod_cls_mtrx_key,
       pc.prod_cls_txt,
       psc.lob_nm,
       psc.proration_rate,
       psc.lvl_2_nm,
       psc.mo_end
FROM TMP_DL_PROD_SERV psc
    LEFT OUTER JOIN TMP_PROD_CLASS pc
ON psc.prod_srvc_key = pc.prod_srvc_key
AND pc.mo_end= psc.mo_end
DISTRIBUTE ON (prod_srvc_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUSTOMER' AS LOG_DETAIL;
SELECT NOW()||' get prms/cust with product.  Those without product will be inserted back later as premise only' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CUSTOMER AS
SELECT PRM.PRMS_KEY, PRM.MO_END, PRM.MO_NM,PRM.REGION, PRM.ORG_KEY,
       PRM.LVL_3_NM,PRM.DVLPMNT_NM, PRM.DVLPMNT_CD, PRM.DVLPMNT_KEY,
       PRM.PROP_ADDR_LINE_1_TXT, PRM.PROP_ADDR_LINE_2_TXT,
       PRM.PROP_ADDR_LINE_3_TXT, PRM.PROP_ADDR_LINE_4_TXT,
       PRM.PROP_FIVE_DGT_ZIP, PRM.PROP_CITY_NM, PRM.PROP_ST_CD,
       PRM.HS_ASSN_CD_KEY,
       PRM.HOUSE_CODE,
       PRM.CUST_NM,
       PRM.ACCT_NBR,
       PSC.LOB_NM,
       PSC.LVL_2_NM SERVICE_TYPE, PRM.CUST_ACCT_KEY,
       PRM.ADDR_LINE_1_TXT CUSTOMER_ADDRESS_LINE_1,
       PRM.ADDR_LINE_2_TXT CUSTOMER_ADDRESS_LINE_2,
       PRM.ADDR_LINE_3_TXT CUSTOMER_ADDRESS_LINE_3,
       PRM.ADDR_LINE_4_TXT CUSTOMER_ADDRESS_LINE_4,
       PRM.FIVE_DGT_ZIP CUSTOMER_ZIP_CODE,
       PRM.CITY_NM CUSTOMER_CITY_NAME,
       PRM.ST_CD CUSTOMER_STATE,
       PSC.PROD_CLS_TXT PRODUCT_CLASS_TEXT,
       PRM.CUST_CLS_TXT CUSTOMER_CLASS_TEXT,
	   PRM.HS_NBR,
       SUM(((PRORATION_RATE/100) * NET_RVNU_AMT)) as PROJECTED_REVENUE
	   
FROM TMP_CUST_PREM_ADDR_CUST PRM
LEFT OUTER JOIN TMP_PROD_SERV_CLAS PSC
          ON PSC.PROD_SRVC_KEY = PRM.PROD_SRVC_KEY
          AND PSC.PROD_CLS_MTRX_KEY = PRM.PROD_CLS_MTRX_KEY
          AND PSC.MO_END = PRM.MO_END
		  AND PRM.PROD_SRVC_KEY > 0
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33
DISTRIBUTE ON (CUST_ACCT_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_DENORM' AS LOG_DETAIL;
SELECT NOW()||' get code information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_DENORM AS
SELECT cd_key,std_cd_desc,mo_end
FROM  (
SELECT cd_key,std_cd_desc,da.end_day_key as mo_end,
              RANK () OVER (PARTITION BY scd.cd_key
                               ORDER BY scd.eff_start_day_key,scd.rowid) AS cd_rnk
FROM TMP_DATES da,
     ${NZ_DATABASE_DL}..DL_STANDARD_CODE_DENORM scd
WHERE scd.CD_TYP_CD IN ('DISCONNECT_REASON','WORK_ORDER_REASON','SALES_UPGRADE_DOWNGRADE','WORK_ORDER_SRO_REASON')
AND scd.EFF_START_DAY_KEY <= da.END_DAY_KEY
AND scd.EFF_END_DAY_KEY > da.END_DAY_KEY
AND std_cd_desc NOT IN ('Other','Save')
) r
WHERE cd_rnk = 1
DISTRIBUTE ON (cd_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_SEG_TEN' AS LOG_DETAIL;
SELECT NOW()||' get segment tenure information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_SEG_TEN AS
SELECT DISTINCT cust_acct_key,
       DISCONNECT_RSN_KEY,
       SEG_CNCT_DAY_KEY,
       SEG_DISCNCT_DAY_KEY
FROM ${NZ_DATABASE_DL}..DL_SEGMENT_TENURE st
WHERE st.ANLY_SEG_KEY = -1
        AND SEG_DISCONNECT_RULE_KEY = 11
DISTRIBUTE ON (CUST_ACCT_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_SEG_TEN_DISCONNECT' AS LOG_DETAIL;
SELECT NOW()||' get segment tenure disconnect information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_SEG_TEN_DISCONNECT AS
SELECT DISTINCT cust_acct_key,
       std_cd_desc,
       da.end_day_key as mo_end
FROM TMP_DATES da
     INNER JOIN TMP_SEG_TEN st
       ON st.SEG_CNCT_DAY_KEY between da.BEGN_DAY_KEY and  da.END_DAY_KEY
	   AND st.SEG_DISCNCT_DAY_KEY > st.SEG_CNCT_DAY_KEY
     INNER JOIN TMP_DENORM scd
                ON scd.CD_KEY = st.DISCONNECT_RSN_KEY
                AND scd.MO_END = da.END_DAY_KEY
DISTRIBUTE ON (CUST_ACCT_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_SEG_TEN_CONNECT' AS LOG_DETAIL;
SELECT NOW()||' get segment tenure connect information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_SEG_TEN_CONNECT AS
SELECT DISTINCT cust_acct_key,
       da.end_day_key as mo_end
FROM TMP_DATES da
     INNER JOIN ${NZ_DATABASE_DL}..DL_SEGMENT_TENURE st
       ON st.SEG_CNCT_DAY_KEY between da.BEGN_DAY_KEY and da.END_DAY_KEY
       AND st.SEG_DISCNCT_DAY_KEY > st.SEG_CNCT_DAY_KEY
WHERE st.SEG_CNCT_RULE_KEY = 5
DISTRIBUTE ON (CUST_ACCT_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUST_DISCONNECT' AS LOG_DETAIL;
SELECT NOW()||' get customer disconnect information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CUST_DISCONNECT AS
SELECT PRMS_KEY, MO_NM,REGION, LVL_3_NM, CUST.ORG_KEY,
       DVLPMNT_NM, DVLPMNT_CD, DVLPMNT_KEY,
       PROP_ADDR_LINE_1_TXT, PROP_ADDR_LINE_2_TXT,
       PROP_ADDR_LINE_3_TXT, PROP_ADDR_LINE_4_TXT,
       PROP_FIVE_DGT_ZIP, PROP_CITY_NM, PROP_ST_CD,
       HS_ASSN_CD_KEY,
       HOUSE_CODE,
       CUST.MO_END, CUST_NM, ACCT_NBR,
       PROJECTED_REVENUE,
       CUST.LOB_NM,
       SERVICE_TYPE, CUST.CUST_ACCT_KEY,
       CUSTOMER_ADDRESS_LINE_1,
       CUSTOMER_ADDRESS_LINE_2,
       CUSTOMER_ADDRESS_LINE_3,
       CUSTOMER_ADDRESS_LINE_4,
       CUSTOMER_ZIP_CODE,
       CUSTOMER_CITY_NAME,
       CUSTOMER_STATE,
       PRODUCT_CLASS_TEXT,
       CUSTOMER_CLASS_TEXT,
       cast(NULL as varchar(100))  DISCONNECT_REASON,
       CASE WHEN CNCT.CUST_ACCT_KEY IS NOT NULL
            THEN cast( 'Connect' as varchar(10))
        END CONNECT_DISCONNECT_TYPE,
		HS_NBR
	FROM TMP_CUSTOMER CUST
     LEFT JOIN TMP_SEG_TEN_CONNECT CNCT
          ON CNCT.CUST_ACCT_KEY = CUST.CUST_ACCT_KEY
          AND CNCT.MO_END = CUST.MO_END
     WHERE SERVICE_TYPE is not null
DISTRIBUTE ON (CUST_ACCT_KEY);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CUST_DISCONNECT' AS LOG_DETAIL;
SELECT NOW()||' get customer disconnect information' AS LOG_INFORMATION;


INSERT INTO TMP_CUST_DISCONNECT 
(
PRMS_KEY, MO_NM,REGION, LVL_3_NM, ORG_KEY,
       DVLPMNT_NM, DVLPMNT_CD, DVLPMNT_KEY,
       PROP_ADDR_LINE_1_TXT, PROP_ADDR_LINE_2_TXT,
       PROP_ADDR_LINE_3_TXT, PROP_ADDR_LINE_4_TXT,
       PROP_FIVE_DGT_ZIP, PROP_CITY_NM, PROP_ST_CD,
       HS_ASSN_CD_KEY,
       HOUSE_CODE,
       MO_END, CUST_NM, ACCT_NBR,
       PROJECTED_REVENUE,
       LOB_NM,
       SERVICE_TYPE, CUST_ACCT_KEY,
       CUSTOMER_ADDRESS_LINE_1,
       CUSTOMER_ADDRESS_LINE_2,
       CUSTOMER_ADDRESS_LINE_3,
       CUSTOMER_ADDRESS_LINE_4,
       CUSTOMER_ZIP_CODE,
       CUSTOMER_CITY_NAME,
       CUSTOMER_STATE,
       PRODUCT_CLASS_TEXT,
       CUSTOMER_CLASS_TEXT,
       DISCONNECT_REASON,
       CONNECT_DISCONNECT_TYPE,
	   HS_NBR
)
SELECT PRMS_KEY, MO_NM,REGION, LVL_3_NM, CUST.ORG_KEY,
       DVLPMNT_NM, DVLPMNT_CD, DVLPMNT_KEY,
       PROP_ADDR_LINE_1_TXT, PROP_ADDR_LINE_2_TXT,
       PROP_ADDR_LINE_3_TXT, PROP_ADDR_LINE_4_TXT,
       PROP_FIVE_DGT_ZIP, PROP_CITY_NM, PROP_ST_CD,
       HS_ASSN_CD_KEY,
       HOUSE_CODE,
       CUST.MO_END, CUST_NM, ACCT_NBR,
       PROJECTED_REVENUE,
       CUST.LOB_NM,
       SERVICE_TYPE, CUST.CUST_ACCT_KEY,
       CUSTOMER_ADDRESS_LINE_1,
       CUSTOMER_ADDRESS_LINE_2,
       CUSTOMER_ADDRESS_LINE_3,
       CUSTOMER_ADDRESS_LINE_4,
       CUSTOMER_ZIP_CODE,
       CUSTOMER_CITY_NAME,
       CUSTOMER_STATE,
       PRODUCT_CLASS_TEXT,
       CUSTOMER_CLASS_TEXT,
       DISCNCT.STD_CD_DESC as  DISCONNECT_REASON,
       'Disconnect' AS CONNECT_DISCONNECT_TYPE,
	   HS_NBR
FROM TMP_CUSTOMER CUST
          INNER JOIN TMP_SEG_TEN_DISCONNECT DISCNCT
          ON DISCNCT.CUST_ACCT_KEY = CUST.CUST_ACCT_KEY
          AND DISCNCT.MO_END = CUST.MO_END;

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_STRATEGIC_SEGMENT' AS LOG_DETAIL;
SELECT NOW()||' get strategic segmentation information' AS LOG_INFORMATION;
CREATE TEMP TABLE TMP_STRATEGIC_SEGMENT AS
SELECT cust_acct_key,STRTGC_SEGMNTN_DESC,da.end_day_key as mo_end
FROM ${NZ_DATABASE_DL}..DL_CUSTOMER_ACCOUNT_DRVD_ATTR_SS c,
     ${NZ_DATABASE_DL}..DL_STRATEGIC_SEGMENTATION s,
     TMP_DATES DA
WHERE c.VER_START_DAY_KEY <= DA.END_DAY_KEY
AND c.VER_END_DAY_KEY > DA.END_DAY_KEY
AND s.STRTGC_SEGMNTN_KEY = c.STRTGC_SEGMNTN_KEY
DISTRIBUTE ON (cust_acct_key);

SELECT NOW()||' CREATE TEMPORARY TABLE TMP_CVC_DTL_REP' AS LOG_DETAIL;
SELECT NOW()||' populate premise with cust information' AS LOG_INFORMATION;

CREATE TEMP TABLE TMP_CVC_DTL_REP AS
SELECT  MO_NM as MONTH_NAME,
      	CUST.MO_END,
        REGION,
        CUST.LVL_3_NM as DIVISION,
        CUST.ORG_KEY,
        CUST.LOB_NM as RGU_LOB,
        CUST.PRMS_KEY as PREMISE_KEY,
        CUST.CUST_ACCT_KEY as CUSTOMER_ACCT_KEY,
        CUST_NM as CUSTOMER_NAME,
        ACCT_NBR as ACCOUNT_NUMBER,
        CUSTOMER_ADDRESS_LINE_1,
        CUSTOMER_ADDRESS_LINE_2,
        CUSTOMER_ADDRESS_LINE_3,
        CUSTOMER_ADDRESS_LINE_4,
        CUSTOMER_ZIP_CODE,
        CUSTOMER_CITY_NAME,
        CUSTOMER_STATE,
        DVLPMNT_NM as PROPERTY_NAME,
        PROP_ADDR_LINE_1_TXT PROPERTY_ADDRESS_LINE_1,
        PROP_ADDR_LINE_2_TXT PROPERTY_ADDRESS_LINE_2,
        PROP_ADDR_LINE_3_TXT PROPERTY_ADDRESS_LINE_3,
        PROP_ADDR_LINE_4_TXT PROPERTY_ADDRESS_LINE_4,
        PROP_FIVE_DGT_ZIP PROPERTY_ZIP_CODE,
        PROP_CITY_NM as PROPERTY_CITY_NAME,
        PROP_ST_CD as PROPERTY_STATE,
        SS.STRTGC_SEGMNTN_DESC as CUSTOMER_SEGMENT,
        ASEG.LVL_1_NM as BUNDLE_TYPE,
        PRODUCT_CLASS_TEXT,
        CUSTOMER_CLASS_TEXT,
        SERVICE_TYPE as SERVICE_NAME,
        PROJECTED_REVENUE,
        SCD.SRC_BILL_SYST_CD as ASSOCIATION_CODE,
        DVLPMNT_KEY as DEVELOPMENT_KEY,
        DVLPMNT_CD as DEV_MISC_CODE,
        HOUSE_CODE,
        DISCONNECT_REASON,
        CONNECT_DISCONNECT_TYPE,
		CUST.HS_NBR
FROM TMP_CUST_DISCONNECT CUST
     LEFT JOIN TMP_STRATEGIC_SEGMENT SS
          ON SS.CUST_ACCT_KEY = CUST.CUST_ACCT_KEY
          AND SS.MO_END = CUST.MO_END
     LEFT JOIN ${NZ_DATABASE_DL}..DL_CUST_ACCT_SEG_TEN ST
          ON ST.CUST_ACCT_KEY = CUST.CUST_ACCT_KEY
          AND ST.EFF_START_DAY_KEY <= CUST.MO_END
          AND ST.EFF_END_DAY_KEY > CUST.MO_END
     LEFT JOIN ${NZ_DATABASE_DL}..DL_ANALYSIS_SEGMENT ASEG
          ON ST.ANLY_SEG_KEY = ASEG.ANLY_SEG_KEY
     LEFT JOIN ${NZ_DATABASE_DL}..DL_STANDARD_CODE_DENORM SCD
          ON SCD.CD_KEY  = CUST.HS_ASSN_CD_KEY
          AND SCD.CD_TYP_CD = 'PREMISE_ASSOCIATION'
          AND SCD.EFF_START_DAY_KEY <= CUST.MO_END
          AND SCD.EFF_END_DAY_KEY > CUST.MO_END
DISTRIBUTE ON RANDOM;

SELECT NOW()||' INSERT INTO TMP_CVC_DTL_REP' AS LOG_DETAIL;
SELECT NOW()||' populate premise information only' AS LOG_INFORMATION;

INSERT INTO TMP_CVC_DTL_REP (
	MONTH_NAME,
	MO_END,
	REGION,
	DIVISION,
	ORG_KEY,
	RGU_LOB,
	PREMISE_KEY,
	CUSTOMER_ACCT_KEY,
	CUSTOMER_NAME,
	ACCOUNT_NUMBER,
	CUSTOMER_ADDRESS_LINE_1,
	CUSTOMER_ADDRESS_LINE_2,
	CUSTOMER_ADDRESS_LINE_3,
	CUSTOMER_ADDRESS_LINE_4,
	CUSTOMER_ZIP_CODE,
	CUSTOMER_CITY_NAME,
	CUSTOMER_STATE,
	PROPERTY_NAME,
	PROPERTY_ADDRESS_LINE_1,
	PROPERTY_ADDRESS_LINE_2,
	PROPERTY_ADDRESS_LINE_3,
	PROPERTY_ADDRESS_LINE_4,
	PROPERTY_ZIP_CODE,
	PROPERTY_CITY_NAME,
	PROPERTY_STATE,
	CUSTOMER_SEGMENT,
	BUNDLE_TYPE,
	PRODUCT_CLASS_TEXT,
	CUSTOMER_CLASS_TEXT,
	SERVICE_NAME,
	PROJECTED_REVENUE,
	ASSOCIATION_CODE,
	DEVELOPMENT_KEY,
	DEV_MISC_CODE,
	HOUSE_CODE,
	DISCONNECT_REASON,
	CONNECT_DISCONNECT_TYPE,
	HS_NBR
)
SELECT  DISTINCT p.MO_NM as MONTH_NAME,
		p.mo_end,
        p.REGION,
        p.LVL_3_NM as DIVISION,
		p.ORG_KEY,
        NULL as RGU_LOB,
        p.PRMS_KEY as PREMISE_KEY,
        NULL as CUSTOMER_ACCT_KEY,
        NULL as CUSTOMER_NAME,
        NULL as ACCOUNT_NUMBER,
        NULL as CUSTOMER_ADDRESS_LINE_1,
        NULL as CUSTOMER_ADDRESS_LINE_2,
        NULL as CUSTOMER_ADDRESS_LINE_3,
        NULL as CUSTOMER_ADDRESS_LINE_4,
        NULL as CUSTOMER_ZIP_CODE,
        NULL as CUSTOMER_CITY_NAME,
        NULL as CUSTOMER_STATE,
        p.DVLPMNT_NM as PROPERTY_NAME,
        p.PROP_ADDR_LINE_1_TXT PROPERTY_ADDRESS_LINE_1,
        p.PROP_ADDR_LINE_2_TXT PROPERTY_ADDRESS_LINE_2,
        p.PROP_ADDR_LINE_3_TXT PROPERTY_ADDRESS_LINE_3,
        p.PROP_ADDR_LINE_4_TXT PROPERTY_ADDRESS_LINE_4,
        p.PROP_FIVE_DGT_ZIP PROPERTY_ZIP_CODE,
        p.PROP_CITY_NM as PROPERTY_CITY_NAME,
        p.PROP_ST_CD as PROPERTY_STATE,
        NULL as CUSTOMER_SEGMENT,
        NULL as BUNDLE_TYPE,
        NULL as PRODUCT_CLASS_TEXT,
        NULL as CUSTOMER_CLASS_TEXT,
        NULL as SERVICE_NAME,
        NULL as PROJECTED_REVENUE,
        NULL as ASSOCIATION_CODE,
        p.DVLPMNT_KEY as DEVELOPMENT_KEY,
        p.DVLPMNT_CD as DEV_MISC_CODE,
        p.HOUSE_CODE,
        NULL as DISCONNECT_REASON,
        NULL as CONNECT_DISCONNECT_TYPE,
		p.HS_NBR
FROM TMP_CUST_PREM_ADDR_CUST p
     LEFT OUTER JOIN TMP_CVC_DTL_REP t
       ON p.prms_key = t.premise_key
       AND p.mo_end = t.mo_end
WHERE t.premise_key IS NULL;

SELECT NOW()||' INSERT INTO TMP_CVC_DTL_REP' AS LOG_DETAIL;
SELECT NOW()||' populate premise without active customers' AS LOG_INFORMATION;

INSERT INTO TMP_CVC_DTL_REP (
	MONTH_NAME,
	MO_END,
	REGION,
	DIVISION,
	ORG_KEY,
	RGU_LOB,
	PREMISE_KEY,
	CUSTOMER_ACCT_KEY,
	CUSTOMER_NAME,
	ACCOUNT_NUMBER,
	CUSTOMER_ADDRESS_LINE_1,
	CUSTOMER_ADDRESS_LINE_2,
	CUSTOMER_ADDRESS_LINE_3,
	CUSTOMER_ADDRESS_LINE_4,
	CUSTOMER_ZIP_CODE,
	CUSTOMER_CITY_NAME,
	CUSTOMER_STATE,
	PROPERTY_NAME,
	PROPERTY_ADDRESS_LINE_1,
	PROPERTY_ADDRESS_LINE_2,
	PROPERTY_ADDRESS_LINE_3,
	PROPERTY_ADDRESS_LINE_4,
	PROPERTY_ZIP_CODE,
	PROPERTY_CITY_NAME,
	PROPERTY_STATE,
	CUSTOMER_SEGMENT,
	BUNDLE_TYPE,
	PRODUCT_CLASS_TEXT,
	CUSTOMER_CLASS_TEXT,
	SERVICE_NAME,
	PROJECTED_REVENUE,
	ASSOCIATION_CODE,
	DEVELOPMENT_KEY,
	DEV_MISC_CODE,
	HOUSE_CODE,
	DISCONNECT_REASON,
	CONNECT_DISCONNECT_TYPE,
	HS_NBR
)
SELECT  DISTINCT p.MO_NM as MONTH_NAME,
		p.mo_end,
        p.REGION,
        p.LVL_3_NM as DIVISION,
		p.ORG_KEY,
        NULL as RGU_LOB,
        p.PRMS_KEY as PREMISE_KEY,
        p.CUST_ACCT_KEY as CUSTOMER_ACCT_KEY,
        p.CUST_NM as CUSTOMER_NAME,
        p.ACCT_NBR as ACCOUNT_NUMBER,
        p.ADDR_LINE_1_TXT CUSTOMER_ADDRESS_LINE_1,
        p.ADDR_LINE_2_TXT CUSTOMER_ADDRESS_LINE_2,
        p.ADDR_LINE_3_TXT CUSTOMER_ADDRESS_LINE_3,
        p.ADDR_LINE_4_TXT CUSTOMER_ADDRESS_LINE_4,
        p.FIVE_DGT_ZIP AS CUSTOMER_ZIP_CODE,
        p.CITY_NM AS CUSTOMER_CITY_NAME,
        p.ST_CD  AS CUSTOMER_STATE,
        p.DVLPMNT_NM as PROPERTY_NAME,
        p.PROP_ADDR_LINE_1_TXT PROPERTY_ADDRESS_LINE_1,
        p.PROP_ADDR_LINE_2_TXT PROPERTY_ADDRESS_LINE_2,
        p.PROP_ADDR_LINE_3_TXT PROPERTY_ADDRESS_LINE_3,
        p.PROP_ADDR_LINE_4_TXT PROPERTY_ADDRESS_LINE_4,
        p.PROP_FIVE_DGT_ZIP PROPERTY_ZIP_CODE,
        p.PROP_CITY_NM as PROPERTY_CITY_NAME,
        p.PROP_ST_CD as PROPERTY_STATE,
        NULL as CUSTOMER_SEGMENT,
        NULL as BUNDLE_TYPE,
        NULL as PRODUCT_CLASS_TEXT,
        NULL as CUSTOMER_CLASS_TEXT,
        NULL as SERVICE_NAME,
        NULL as PROJECTED_REVENUE,
        SCD.SRC_BILL_SYST_CD as ASSOCIATION_CODE,
        p.DVLPMNT_KEY as DEVELOPMENT_KEY,
        p.DVLPMNT_CD as DEV_MISC_CODE,
        p.HOUSE_CODE,
        NULL as DISCONNECT_REASON,
        NULL as CONNECT_DISCONNECT_TYPE,
		p.HS_NBR
FROM TMP_CUST_PREM_ADDR P
	 LEFT JOIN ${NZ_DATABASE_DL}..DL_STANDARD_CODE_DENORM SCD
          ON SCD.CD_KEY  = P.HS_ASSN_CD_KEY
          AND SCD.CD_TYP_CD = 'PREMISE_ASSOCIATION'
          AND SCD.EFF_START_DAY_KEY <= P.MO_END
          AND SCD.EFF_END_DAY_KEY > P.MO_END
WHERE p.cust_acct_key IS NULL;

SELECT NOW()||' INSERT INTO ${NZ_DATABASE_EXRT}..MDU_PREMISE_EXTRACT' AS LOG_DETAIL;

TRUNCATE TABLE ${NZ_DATABASE_EXRT}..MDU_PREMISE_EXTRACT;

INSERT INTO ${NZ_DATABASE_EXRT}..MDU_PREMISE_EXTRACT (
	MO_NM,
	ORG_KEY,
	RGU_LOB,
	PRMS_KEY,
	CUST_ACCT_KEY,
	CUST_NM,
	ACCT_NBR,
	CUST_ADDR_LINE_1,
	CUST_ADDR_LINE_2,
	CUST_ADDR_LINE_3,
	CUST_ADDR_LINE_4,
	CUST_ZIP,
	CUST_CITY_NM,
	CUST_ST,
	PRPTY_NM,
	PRPTY_ADDR_LINE_1,
	PRPTY_ADDR_LINE_2,
	PRPTY_ADDR_LINE_3,
	PRPTY_ADDR_LINE_4,
	PRPTY_ZIP,
	PRPTY_CITY_NM,
	PRPTY_ST,
	CUST_SEG_NM,
	BNDL_TYP,
	PROD_CLS_TXT,
	CUST_CLS_TXT,
	SRVC_NM,
	PRJ_RVNU_AMT,
	ASSN_CD,
	DVLPMNT_KEY,
	DVLPMNT_MISC_CD,
	HS_CD,
	DISCNCT_RSN_DESC,
	CNCT_DISCNCT_TYP,
	HS_NBR
)
SELECT MONTH_NAME AS MO_NM,    
	ORG_KEY,    
	RGU_LOB AS RGU_LOB,     
	PREMISE_KEY AS PRMS_KEY,        
	CUSTOMER_ACCT_KEY AS CUST_ACCT_KEY,     
	CUSTOMER_NAME AS CUST_NM,       
	ACCOUNT_NUMBER AS ACCT_NBR,     
	CUSTOMER_ADDRESS_LINE_1 AS CUST_ADDR_LINE_1,    
	CUSTOMER_ADDRESS_LINE_2 AS CUST_ADDR_LINE_2,    
	CUSTOMER_ADDRESS_LINE_3 AS CUST_ADDR_LINE_3,    
	CUSTOMER_ADDRESS_LINE_4 AS CUST_ADDR_LINE_4,    
	CUSTOMER_ZIP_CODE AS CUST_ZIP,  
	CUSTOMER_CITY_NAME AS CUST_CITY_NM,     
	CUSTOMER_STATE AS CUST_ST,      
	PROPERTY_NAME AS PRPTY_NM,      
	PROPERTY_ADDRESS_LINE_1 AS PRPTY_ADDR_LINE_1,   
	PROPERTY_ADDRESS_LINE_2 AS PRPTY_ADDR_LINE_2,   
	PROPERTY_ADDRESS_LINE_3 AS PRPTY_ADDR_LINE_3,   
	PROPERTY_ADDRESS_LINE_4 AS PRPTY_ADDR_LINE_4,   
	PROPERTY_ZIP_CODE AS PRPTY_ZIP, 
	PROPERTY_CITY_NAME AS PRPTY_CITY_NM,    
	PROPERTY_STATE AS PRPTY_ST,     
	CUSTOMER_SEGMENT AS CUST_SEG_NM,        
	BUNDLE_TYPE AS BNDL_TYP,        
	PRODUCT_CLASS_TEXT AS PROD_CLS_TXT,     
	CUSTOMER_CLASS_TEXT AS CUST_CLS_TXT,    
	SERVICE_NAME AS SRVC_NM,        
	PROJECTED_REVENUE AS PRJ_RVNU_AMT,      
	ASSOCIATION_CODE AS ASSN_CD,    
	DEVELOPMENT_KEY AS DVLPMNT_KEY, 
	DEV_MISC_CODE AS DVLPMNT_MISC_CD,       
	HOUSE_CODE AS HS_CD,    
	DISCONNECT_REASON AS DISCNCT_RSN_DESC,  
	CONNECT_DISCONNECT_TYPE AS CNCT_DISCNCT_TYP,
	HS_NBR
 FROM TMP_CVC_DTL_REP;

SELECT NOW()||' Update EXTRACT_LOAD_CONTROL Table to set DATA_DT' AS LOG_DETAIL;

UPDATE ${NZ_DATABASE_EXRT}..EXTRACT_LOAD_CONTROL
SET DATA_DT = EDW_DATA_DT
WHERE PRJ_NM = 'MDU'
        AND TBL_NM = 'MDU_PREMISE_EXTRACT';

SELECT NOW()||' Update EXTRACT_CONTROL Table to reset INCRMNTL_FLG' AS LOG_DETAIL;

UPDATE ${NZ_DATABASE_EXRT}..EXTRACT_CONTROL
SET INCRMNTL_FLG = 'Y'
WHERE PRJ_NM = 'MDU'
        AND TBL_NM = 'MDU_PREMISE_EXTRACT'
        AND INCRMNTL_FLG = 'N';


